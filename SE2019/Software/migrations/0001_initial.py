# Generated by Django 2.1.7 on 2019-04-16 22:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConfirmString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=256)),
                ('c_time', models.DateTimeField(auto_now_add=True)),
                ('new_password', models.CharField(max_length=256, null=True)),
                ('new_email', models.EmailField(max_length=254, null=True)),
                ('type', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': '确认码',
                'verbose_name_plural': '确认码',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='Del_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('del_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.IntegerField()),
                ('time_of_dynamic', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-time_of_dynamic'],
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='浏览日期')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Personal_information_entrepreneur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personal_information_investor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='项目名称')),
                ('company_name', models.CharField(blank=True, default='', max_length=50, verbose_name='企业名称')),
                ('area', models.CharField(max_length=1000, verbose_name='项目领域')),
                ('introduction', models.CharField(max_length=200, verbose_name='项目简介')),
                ('detailed_introduction', models.TextField(blank=True, default='', verbose_name='项目详细介绍')),
                ('location', models.CharField(max_length=50, verbose_name='地区')),
                ('proposal', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d', verbose_name='商业策划书')),
                ('recruit', models.BooleanField(default=False, verbose_name='项目招聘状态')),
                ('status', models.IntegerField(choices=[(-1, '冻结'), (-2, '取消'), (0, '未融资'), (1, '种子轮'), (2, '天使轮'), (3, 'Pre-A'), (4, 'A轮'), (5, 'A+轮'), (6, 'Pre-B'), (7, 'B轮'), (8, 'B+轮'), (9, 'Pre-C'), (10, 'C轮'), (11, 'C+轮'), (12, 'Pre-D'), (13, 'D轮'), (14, 'D+轮'), (15, 'Pre-E'), (16, 'E轮'), (17, 'E+轮'), (18, 'Pre-F'), (19, 'F轮'), (20, 'F+轮'), (21, 'Pre-IPO'), (22, 'IPO'), (23, '并购'), (24, '股权转让'), (25, '定向增发'), (26, '战略投资'), (27, '新三板')], default=0, verbose_name='项目进展状态')),
                ('security_level', models.IntegerField(choices=[(0, '低'), (1, '中'), (2, '高')], default=0, verbose_name='项目保密等级')),
                ('additional_documents', models.FileField(blank=True, null=True, upload_to='uploads/additional/%Y/%m/%d', verbose_name='附加材料')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAttention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='关注时间')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('realname', models.CharField(max_length=256)),
                ('idnumber', models.CharField(max_length=256)),
                ('sex', models.CharField(choices=[('male', '男'), ('female', '女')], default='男', max_length=32)),
                ('identity', models.IntegerField(choices=[(1, '投资人'), (0, '非投资人')], default=0)),
                ('c_time', models.DateTimeField(auto_now_add=True)),
                ('d_time', models.DateTimeField(default=None, null=True)),
                ('has_confirmed', models.BooleanField(default=False)),
                ('has_confirmed_delete', models.BooleanField(default=False)),
                ('last_view_dynamic', models.DateTimeField()),
                ('phone_num', models.CharField(max_length=20)),
                ('introduction', models.CharField(default='这个人很懒，什么都没有留下', max_length=100, verbose_name='简介')),
                ('nickname', models.CharField(default='xFObAifM', max_length=10)),
                ('area', models.CharField(max_length=1000, verbose_name='关注领域')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='UserAttention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='关注时间')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='Software.User', verbose_name='关注者')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='Software.User', verbose_name='用户(被关注者)')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='follower',
            field=models.ManyToManyField(related_name='follower_of_user', through='Software.UserAttention', to='Software.User', verbose_name='关注者'),
        ),
        migrations.AddField(
            model_name='user',
            name='history',
            field=models.ManyToManyField(related_name='history', through='Software.History', to='Software.Project', verbose_name='浏览历史'),
        ),
        migrations.AddField(
            model_name='projectattention',
            name='follower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='Software.User', verbose_name='关注者'),
        ),
        migrations.AddField(
            model_name='projectattention',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='Software.Project', verbose_name='被关注项目'),
        ),
        migrations.AddField(
            model_name='project',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Software.User', verbose_name='项目创建者'),
        ),
        migrations.AddField(
            model_name='project',
            name='favorite_projects',
            field=models.ManyToManyField(related_name='favorite_projects', through='Software.ProjectAttention', to='Software.User', verbose_name='收藏的项目'),
        ),
        migrations.AddField(
            model_name='personal_information_investor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Software.User'),
        ),
        migrations.AddField(
            model_name='personal_information_entrepreneur',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Software.User'),
        ),
        migrations.AddField(
            model_name='history',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='Software.Project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='history',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myhistory', to='Software.User', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='dynamicrecord',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dynamic_of_this', to='Software.Project'),
        ),
        migrations.AddField(
            model_name='del_user',
            name='del_user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Software.User'),
        ),
        migrations.AddField(
            model_name='confirmstring',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Software.User'),
        ),
        migrations.AlterUniqueTogether(
            name='userattention',
            unique_together={('follower', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='projectattention',
            unique_together={('follower', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='history',
            unique_together={('user', 'project')},
        ),
    ]
